R-Markdown is a great way to create dynamic documents with embedded chunks of R code. The document is self contained and fully reproducible which makes it very easy to share. 

- https://www.rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf


- "FROM RSTUDIO:"
R Markdown documents are fully reproducible. Use a productive notebook interface ⧉ to weave together narrative text and code to produce elegantly formatted output. Use multiple languages ⧉ including R, Python, and SQL.

R Markdown supports dozens of static and dynamic output formats including HTML ⧉, PDF ⧉, MS Word ⧉, Beamer ⧉, HTML5 slides ⧉, Tufte-style handouts ⧉, books ⧉, dashboards, shiny applications ⧉, scientific articles ⧉, websites ⧉, and more.

https://r4ds.had.co.nz/r-markdown.html


RMARKDOWN COMPONENTS

It contains three important types of content:

An (optional) YAML header surrounded by ---s.
Chunks of R code surrounded by ```.
Text mixed with simple text formatting like # heading and _italics_.



rmarkdown::render("1-example.Rmd")



CHALLENGE ONE:

Create one new R Markdown document for each of the three built-in formats: HTML, PDF and Word. Knit each of the three documents. How does the output differ? How does the input differ? (You may need to install LaTeX in order to build the PDF output — RStudio will prompt you if this is necessary.)



CHALLENGE TWO:
Format some text


CHALLENGE THREE:
Make a new code chunk and show the code


CHALLENGE FOUR:
Refer to a figure


